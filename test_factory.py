from __future__ import annotations

import os
import sys
from typing import Callable

from core.browser import get_driver

# Steps
from steps.language_step import run as step1
from steps.email_step import run as step2
from steps.code_step import run as step3
from steps.workspace_open_step import run as step4
from steps.workspace_name_step import run as step5
from steps.profile_step import run as step6
from steps.birthdate_step import run as step7
from steps.invite_step import run as step8
from steps.approved_domains_step import run as step9
from steps.final_checks_step import run as step10


STEPS: list[tuple[str, Callable]] = [
    ("1. –°–º–µ–Ω–∞ —è–∑—ã–∫–∞", step1),
    ("2. –í–≤–æ–¥ email", step2),
    ("3. –í–≤–æ–¥ –∫–æ–¥–∞", step3),
    ("4. –û—Ç–∫—Ä—ã—Ç–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤–æ—Ä–∫—Å–ø–µ–π—Å–∞", step4),
    ("5. –ò–º—è –≤–æ—Ä–∫—Å–ø–µ–π—Å–∞", step5),
    ("6. –ü—Ä–æ—Ñ–∏–ª—å", step6),
    ("7. –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è", step7),
    ("8. –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è", step8),
    ("9. Approved domains", step9),
    ("10. –§–∏–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏", step10),
]


def main() -> int:
    print("üöÄ –ó–∞–ø—É—Å–∫ factory —Ç–µ—Å—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
    driver = get_driver()

    try:
        for name, fn in STEPS:
            print(f"\n‚ñ∂Ô∏è  {name}")
            fn(driver)
            print(f"‚úÖ {name} –ø—Ä–æ–π–¥–µ–Ω")
        print("\nüéâ –í—Å–µ —à–∞–≥–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        return 0
    except AssertionError as e:
        print(f"‚ùå –¢–µ—Å—Ç —É–ø–∞–ª: {e}")
        return 2
    except Exception as e:
        print(f"üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return 3
    finally:
        driver.quit()


if __name__ == "__main__":
    sys.exit(main())
